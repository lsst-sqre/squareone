name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        id: node_version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}

      - name: Install npm packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NPM_PKG_TOKEN}" > ~/.npmrc
          npm install
        env:
          NPM_PKG_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: |
          npm run lint
          npm run format:check

  build:
    needs: [lint]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        id: node_version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}

      - name: Install npm packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NPM_PKG_TOKEN}" > ~/.npmrc
          npm install
        env:
          NPM_PKG_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build site
        run: npm run build

  docker:
    needs: [lint]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1
        id: builder

      - name: Define the Docker tag
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF} | sed -E 's,refs/(heads|tags)/,,' | sed -E 's,/,-,g')

      - name: Print the tag
        id: print
        run: echo ${{steps.vars.outputs.tag}}

      - name: Build production image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.builder.outputs.name }}
          target: production
          tags: lsstsqre/rsp-squareone:${{ steps.vars.outputs.tag }}
          build-args: |
            GH_PKG_TOKEN=${{ secrets.GITHUB_TOKEN }}

  docs:
    needs: [lint, build, docker]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -r docs/requirements.txt
          pip install ltd-conveyor

      - name: Build documentation
        working-directory: docs
        run: make html

      - name: Upload to LSST the Docs
        if: ${{ github.event_name == 'push' }}
        env:
          LTD_USERNAME: ${{ secrets.LTD_USERNAME }}
          LTD_PASSWORD: ${{ secrets.LTD_PASSWORD }}
        working-directory: docs
        run: ltd upload --product squareone --gh --dir _build/html
